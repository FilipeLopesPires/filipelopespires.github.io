{"version":3,"file":"static/js/422.7c4cae40.chunk.js","mappings":"iQASA,MAgDMA,GAAYC,EAAAA,EAAAA,IAAYC,IAAK,CAC/BC,gBAAiB,CACbC,SAAU,WACVC,OAAQ,QACRC,MAAO,OACPC,cAAe,OACfC,UAAW,OACX,CAACN,EAAMO,YAAYC,KAAK,OAAQ,CAC5BF,UAAW,QAEfG,aAAc,aCjEtB,EDOyBC,KACrB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,EAAUf,IACVE,GAAQc,EAAAA,EAAAA,MACR,WAAEC,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAC5BC,GAAWC,EAAAA,EAAAA,GAAcnB,EAAMO,YAAYC,KAAK,OAEtD,IAAIY,EAAW,CAAC,EAkBhB,OAfIA,EAASC,UADVH,EACsB,CACjBhB,SAAU,CAAC,EAAG,GAAK,GACnBoB,SAAU,CAAC,EAAGC,KAAKC,GAAG,EAAG,GACzBC,MAAO,IACPC,eAAgBH,KAAKC,GAAK,GAGT,CACjBtB,SAAU,EAAE,GAAK,GAAK,GACtBoB,SAAU,CAAC,EAAGC,KAAKC,GAAG,EAAG,GACzBC,MAAO,GACPC,eAAgBH,KAAKC,GAAK,IAK9BG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,UAAWlB,EAAQZ,mBAaxB6B,EAAAA,EAAAA,KAACE,EAAAA,EAAgB,CAACC,GAAG,oBAAoBC,MAAOvB,EAAE,0BAA0BkB,UAC5EC,EAAAA,EAAAA,KAACK,EAAAA,EAAO,CAACC,KAAM,kBAEZ,C,uFE/CX,MCHA,EDGkBC,KAIVP,EAAAA,EAAAA,KAACQ,EAAAA,EAAOC,KAAI,CACRC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,WAAY,CACRP,KAAM,SACNQ,UAAW,IACXC,QAAS,IACXhB,UAEFC,EAAAA,EAAAA,KAACpB,EAAAA,EAAgB,K","sources":["sections/ImmersiveSection/ImmersiveSection.js","sections/ImmersiveSection/index.js","pages/Immersive/Immersive.js","pages/Immersive/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport SectionContainer from \"../../containers/SectionContainer\";\r\nimport Gallery from \"../../components/Gallery\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { makeStyles, useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Asset3D, AssetType, Camera3D } from \"../../components/Asset3D\";\r\n\r\nconst ImmersiveSection = () => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    let settings = {};\r\n\r\n    if(isMobile) {\r\n        settings.transform = {\r\n            position: [0, 0.3, 0],\r\n            rotation: [0, Math.PI/2, 0],\r\n            scale: 0.25,\r\n            rotationFactor: Math.PI / 2,\r\n        };\r\n    } else {\r\n        settings.transform = {\r\n            position: [-0.6, 0.3, 0],\r\n            rotation: [0, Math.PI/2, 0],\r\n            scale: 0.5,\r\n            rotationFactor: Math.PI / 2, // scrollRotationFactor = Math.PI * 2 for full scroll\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={classes.canvasContainer}>\r\n            {/*\r\n            <Canvas camera={{ position: [0, 0, 5] }} >\r\n                <Camera3D fov={10} zoom={1}/>\r\n\r\n                <directionalLight position={[5, 5, 5]} intensity={isDarkMode ? 0.5 : 2} castShadow={false}/>\r\n            \r\n                <Asset3D type={AssetType.Immersive} position={settings.transform.position} rotation={settings.transform.rotation} scale={settings.transform.scale} scrollRotationFactor={settings.transform.rotationFactor} />\r\n            </Canvas>\r\n            */}\r\n        </div>\r\n        \r\n\r\n        <SectionContainer id=\"immersive_section\" title={t('menu_immersive_section')}>\r\n        <Gallery type={\"immersive\"} />\r\n        </SectionContainer>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    canvasContainer: {\r\n        position: \"relative\",\r\n        height: \"200vh\",\r\n        width: \"100%\",\r\n        pointerEvents: \"auto\",\r\n        marginTop: \"25vh\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: \"25vh\",\r\n        },\r\n        marginBottom: \"-75vh\",\r\n        //zIndex: -1,\r\n        //backgroundColor: \"red\",\r\n    },\r\n}));\r\n\r\nexport default ImmersiveSection;\r\n","import ImmersiveSection from \"./ImmersiveSection\";\r\n\r\nexport default ImmersiveSection;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ImmersiveSection from \"../../sections/ImmersiveSection\";\r\n// import { useTheme } from \"@material-ui/core\";\r\n\r\nconst Immersive = () => {\r\n    // const theme = useTheme()\r\n\r\n    return (\r\n        <motion.main\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{\r\n                type: \"spring\",\r\n                stiffness: 260,\r\n                damping: 20,\r\n            }}\r\n        >\r\n            <ImmersiveSection />\r\n        </motion.main>\r\n    );\r\n};\r\n\r\nexport default Immersive;\r\n","import Immersive from \"./Immersive\";\r\n\r\nexport default Immersive;\r\n"],"names":["useStyles","makeStyles","theme","canvasContainer","position","height","width","pointerEvents","marginTop","breakpoints","down","marginBottom","ImmersiveSection","t","useTranslation","classes","useTheme","isDarkMode","useContext","ThemeContext","isMobile","useMediaQuery","settings","transform","rotation","Math","PI","scale","rotationFactor","_jsxs","_Fragment","children","_jsx","className","SectionContainer","id","title","Gallery","type","Immersive","motion","main","initial","opacity","animate","transition","stiffness","damping"],"sourceRoot":""}