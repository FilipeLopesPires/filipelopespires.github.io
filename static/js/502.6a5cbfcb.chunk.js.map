{"version":3,"file":"static/js/502.6a5cbfcb.chunk.js","mappings":"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","sources":["components/Gallery/Card.js","data.js","components/Gallery/Gallery.js","components/Gallery/index.js","components/CustomMath.js","components/Divider.js","containers/SectionContainer.js","components/Asset3D/Model3D.js","components/Asset3D/ArchangelMichaelStatue3D.js","components/Asset3D/ReflectionHDR.js","components/Asset3D/AppleVisionPro3D.js","components/Asset3D/REDCamera3D.js","components/Asset3D/LightBulb3D.js","components/Asset3D/SphericalUI.js","components/Asset3D/ProfilePicture3D.js","components/Asset3D/Asset3D.js"],"sourcesContent":["import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\n\r\nconst swapImageSource = (targetID, newSource) => {\r\n    if(newSource === \"\") return;\r\n    //console.log(targetID, newSource);\r\n    document.getElementById(targetID).src = newSource;\r\n}\r\n\r\n// Used to check if a Card is in viewport (i.e. is the most visible card on the screen)\r\nconst useIsInViewport = (id, ref, frontImage, frontAnimation) => {\r\n    const [isIntersecting, setIsIntersecting] = useState(false);\r\n    const isTouchscreen = useMediaQuery('(hover: none)');\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                setIsIntersecting(entry.isIntersecting);\r\n\r\n                // Make sure card image swap is also triggered on touchscreens\r\n                if(isTouchscreen) {\r\n                    if(entry.isIntersecting) {\r\n                        swapImageSource(`${id}-cardImg`, frontAnimation);\r\n                    } else {\r\n                        swapImageSource(`${id}-cardImg`, frontImage);\r\n                    }\r\n                }\r\n            },\r\n            { threshold: 1.0 } // Adjust threshold as needed\r\n        );\r\n\r\n        if (ref.current) {\r\n            observer.observe(ref.current);\r\n            //console.log('is in viewport');\r\n        }\r\n\r\n        return () => {\r\n            if (ref.current) {\r\n                observer.unobserve(ref.current);\r\n                //console.log('is NOT in viewport');\r\n            }\r\n        };\r\n    }, [id, ref, frontImage, frontAnimation]);\r\n\r\n    return isIntersecting;\r\n};\r\n\r\nconst Card = ({ id, page, title, date, frontImage, frontAnimation, frontImageAlt, cardCoverage }) => {\r\n\r\n    const hexToRgba = (hex, opacity) => {\r\n        const bigint = parseInt(hex.slice(1), 16);\r\n        const r = (bigint >> 16) & 255;\r\n        const g = (bigint >> 8) & 255;\r\n        const b = bigint & 255;\r\n        return `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    };\r\n\r\n    const ref = useRef(null);\r\n    const theme = useTheme();\r\n    const classes = useStyles(hexToRgba);\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const isTouchscreen = useMediaQuery('(hover: none)');\r\n    const isInViewport = useIsInViewport(id, ref, frontImage, frontAnimation);\r\n\r\n    return (\r\n        <a href={page} id={id} ref={ref}\r\n            className={`${classes.cardRoot} ${isDarkMode ? classes.cardRootDark : classes.cardRootLight} ${classes[cardCoverage===33?\"card33\":cardCoverage===66?\"card66\":\"card100\"]} ${isTouchscreen && isInViewport ? (isDarkMode ? classes.cardInViewDark : classes.cardInViewLight) : ''}`}\r\n            onMouseEnter={() => swapImageSource(`${id}-cardImg`, frontAnimation)} onMouseLeave={() => swapImageSource(`${id}-cardImg`, frontImage)}>\r\n            <div className={classes.cardImgContainer}>\r\n                <img className={`${classes.cardImg} ${classes[cardCoverage===33?\"card1x1\":cardCoverage===66?\"card2x1\":\"card3x1\"]}`} id={`${id}-cardImg`} src={frontImage} alt={frontImageAlt}></img>\r\n            </div>\r\n            <div className={`${classes.cardInfoContainer}`}>\r\n                <h4><b>{title}</b></h4> \r\n                <p>{date}</p> \r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardRoot: {\r\n        zIndex: 1,\r\n    },\r\n\r\n    cardRootDark: {\r\n        textDecoration: \"none\",\r\n        transition: \"0.5s\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        border: `2px solid ${theme.palette.background.default}`,\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            color: theme.palette.background.default,\r\n        },\r\n    },\r\n\r\n    cardRootLight: (hexToRgba) => ({\r\n        textDecoration: \"none\",\r\n        transition: \"0.5s\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        border: `2px solid ${theme.palette.text.primary}`,\r\n        \"&:hover\": {\r\n            backgroundColor: hexToRgba(theme.palette.primary.main, 0.1),\r\n            //color: theme.palette.primary.main,\r\n            border: `2px solid ${theme.palette.primary.main}`,\r\n        },\r\n    }),\r\n\r\n    cardInViewDark: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.background.default,\r\n    },\r\n\r\n    cardInViewLight: (hexToRgba) => ({\r\n        backgroundColor: hexToRgba(theme.palette.primary.main, 0.1),\r\n        //color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n    }),\r\n\r\n    card33: {\r\n        flex: \"1 1 33.33%\",\r\n        maxWidth: \"33.33%\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flex: \"1 1 50%\",\r\n            maxWidth: \"50%\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            flex: \"1 1 100%\",\r\n            maxWidth: \"100%\",\r\n        }\r\n    },\r\n\r\n    card66: {\r\n        flex: \"1 1 66.66%\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flex: \"1 1 100%\",\r\n        }\r\n    },\r\n\r\n    card100: {\r\n        flex: \"1 1 100%\",\r\n    },\r\n\r\n    cardInfoContainer: {\r\n        textAlign: \"left\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        width: \"100%\",\r\n        \"& h4\": {\r\n            fontSize: \"18px\",\r\n            margin: \"6px 0px 0px 0px\",\r\n        },\r\n        \"& p\": {\r\n            fontSize: \"14px\",\r\n            margin: \"0px 0px 8px 0px\",\r\n        },\r\n        \"& h4, & p\": {\r\n            padding: \"0px 5px 0px 5px\",\r\n        },\r\n    },\r\n\r\n    cardImgContainer: {\r\n        display: \"block\",\r\n        marginLeft: \"0px\",\r\n        marginRight: \"0px\",\r\n        marginBottom: \"0px\",\r\n        width: \"100%\",\r\n        overflow: \"hidden\",\r\n        objectFit: \"cover\",\r\n    },\r\n\r\n    cardImg: {\r\n        padding: \"5px 5px 0px 5px\",\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        objectFit: \"cover\",\r\n    },\r\n\r\n    card1x1: {\r\n        aspectRatio: \"1 / 1\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            aspectRatio: \"1 / 1\",\r\n        },\r\n    },\r\n\r\n    card2x1: {\r\n        aspectRatio: \"2 / 1\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            aspectRatio: \"1 / 1\",\r\n        },\r\n    },\r\n\r\n    card3x1: {\r\n        aspectRatio: \"3 / 1\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            aspectRatio: \"2 / 1\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            aspectRatio: \"1 / 1\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default Card;\r\n","import Img_1x1 from \"./assets/images/1x1.jpg\";\r\nimport Img_2x1 from \"./assets/images/2x1.jpg\";\r\nimport Img_3x1 from \"./assets/images/3x1.jpg\";\r\nimport Img_16x9 from \"./assets/images/16x9.jpg\";\r\nimport Img_9x16 from \"./assets/images/9x16.jpg\";\r\nimport Img_cinema_standard from \"./assets/images/cinema-standard.jpg\";\r\n\r\nconst immersiveProjectList = [\r\n    {\r\n        id: \"project-immersive-1\",\r\n        page: \"/immersive\",\r\n        title: \"Project 1\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExanlmOTVpbDZybTNxMnRld3N6ZzFobjZjMDZzd3l2djR0d2sxc25hMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/HriEPuKHAf0BsirCCY/giphy.webp\",\r\n        frontImageAlt: \"Image 1\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-immersive-2\",\r\n        page: \"/immersive\",\r\n        title: \"Project 2\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 2\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-immersive-3\",\r\n        page: \"/immersive\",\r\n        title: \"Project 3\",\r\n        date: \"2024\",\r\n        frontImage: Img_9x16,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 3\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-immersive-4\",\r\n        page: \"/immersive\",\r\n        title: \"Project 4\",\r\n        date: \"2024\",\r\n        frontImage: Img_2x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 4\",\r\n        cardCoverage: 66,\r\n    },\r\n    {\r\n        id: \"project-immersive-5\",\r\n        page: \"/immersive\",\r\n        title: \"Project 5\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 5\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-immersive-6\",\r\n        page: \"/immersive\",\r\n        title: \"Project 6\",\r\n        date: \"2024\",\r\n        frontImage: Img_3x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 6\",\r\n        cardCoverage: 100,\r\n    }\r\n];\r\n\r\nconst filmProjectList = [\r\n    {\r\n        id: \"project-film-1\",\r\n        page: \"/film\",\r\n        title: \"Project 1\",\r\n        date: \"2024\",\r\n        frontImage: Img_3x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 1\",\r\n        cardCoverage: 100,\r\n    },\r\n    {\r\n        id: \"project-film-2\",\r\n        page: \"/film\",\r\n        title: \"Project 2\",\r\n        date: \"2024\",\r\n        frontImage: Img_16x9,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 2\",\r\n        cardCoverage: 100,\r\n    },\r\n    {\r\n        id: \"project-film-3\",\r\n        page: \"/film\",\r\n        title: \"Project 3\",\r\n        date: \"2024\",\r\n        frontImage: Img_cinema_standard,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 3\",\r\n        cardCoverage: 100,\r\n    },\r\n];\r\n\r\nconst designProjectList = [\r\n    {\r\n        id: \"project-design-1\",\r\n        page: \"/design\",\r\n        title: \"Project 1\",\r\n        date: \"2024\",\r\n        frontImage: Img_3x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 1\",\r\n        cardCoverage: 100,\r\n    },\r\n    {\r\n        id: \"project-design-2\",\r\n        page: \"/design\",\r\n        title: \"Project 2\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 2\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-design-3\",\r\n        page: \"/design\",\r\n        title: \"Project 3\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 3\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-design-4\",\r\n        page: \"/design\",\r\n        title: \"Project 4\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 4\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-design-5\",\r\n        page: \"/design\",\r\n        title: \"Project 5\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 5\",\r\n        cardCoverage: 33,\r\n    },\r\n    {\r\n        id: \"project-design-6\",\r\n        page: \"/design\",\r\n        title: \"Project 6\",\r\n        date: \"2024\",\r\n        frontImage: Img_1x1,\r\n        frontAnimation: \"\",\r\n        frontImageAlt: \"Image 6\",\r\n        cardCoverage: 33,\r\n    },\r\n];\r\n\r\nconst skillsList = [\r\n    { title: \"...\", value: 75 },\r\n    { title: \"...\", value: 80 },\r\n];\r\n\r\nconst experienceList = [\r\n    {\r\n        id: 0,\r\n        company: \"...\",\r\n        links: {\r\n            website: \"https://...\",\r\n            facebook: \"https://...\",\r\n            instagram: \"https://...\",\r\n        },\r\n    },\r\n    {\r\n        id: 1,\r\n        company: \"...\",\r\n        links: {\r\n            instagram: \"https://...\",\r\n        },\r\n    },\r\n];\r\n\r\nexport { immersiveProjectList, filmProjectList, designProjectList, skillsList, experienceList };\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { AnimatePresence, AnimateSharedLayout } from \"framer-motion\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Button,\r\n  Box,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport Card from \"./Card\";\r\nimport { immersiveProjectList, filmProjectList, designProjectList } from \"../../data\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Gallery = ({type}) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  //const [selectedId, setSelectedId] = useState(null);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [loadedProjects, setLoadedProjects] = useState([]);\r\n  const [pageNo, setPageNo] = useState(0);\r\n  const [pageSize, setPageSize] = useState(6);\r\n\r\n  //const getSelected = (id) => newProjectList.find((elem) => elem.id === id);\r\n\r\n  function loadProjects() {\r\n    const startIndex = pageNo * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    let newProjects = (type===\"immersive\" ? immersiveProjectList : type===\"film\" ? filmProjectList : designProjectList).filter((value, index) => {\r\n      return index >= startIndex && index < endIndex;\r\n    });\r\n    //console.log('newProjects: ', newProjects);\r\n    setLoadedProjects((prevProjects) => [...prevProjects, ...newProjects]);\r\n    setPageNo((prevPageNo) => prevPageNo + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isMobile) setPageSize(3);\r\n    loadProjects();\r\n  }, []);\r\n\r\n  //console.log('loadedProjects after pageNo: ', pageNo,' pageSize: ', pageSize);\r\n  //console.log(loadedProjects);\r\n  return (\r\n    <>\r\n      <Grid container className={classes.mainContainer}>\r\n        {loadedProjects.map((item, k) => (\r\n            <Card\r\n                id={item.id}\r\n                page={item.page}\r\n                title={item.title}\r\n                date={item.date}\r\n                frontImage={item.frontImage}\r\n                frontAnimation={item.frontAnimation}\r\n                frontImageAlt={item.frontImageAlt}\r\n                cardCoverage={item.cardCoverage}\r\n                initial={{ opacity: 0, y: -50 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n            />\r\n        ))}\r\n      </Grid>\r\n      {loadedProjects.length < (type===\"immersive\" ? immersiveProjectList : type===\"film\" ? filmProjectList : designProjectList).length && (\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n          <Button\r\n            className={classes.loadBtn}\r\n            onClick={loadProjects}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            {t(\"project_load_btn\")}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"left\",\r\n    },\r\n    loadBtn: {\r\n        width: \"200px\",\r\n    },\r\n}));\r\n\r\nexport default Gallery;\r\n","import Gallery from \"./Gallery\";\r\n\r\nexport default Gallery","\r\nconst lerp = (start, end, t) => {\r\n    // If the difference is less than 0.0001 (i.e., within 4 decimal places), snap to end\r\n    if (Math.abs(end - start) < 0.0001) {\r\n      return end;\r\n    }\r\n    return start + (end - start) * t;\r\n};\r\n\r\nfunction calculateScrollOffset(canvasOffset, windowHeightCorrectionFactor = 0) {\r\n    const windowHeight = window.innerHeight + windowHeightCorrectionFactor;\r\n    if((window.scrollY - canvasOffset) > windowHeight) {\r\n        return 1;\r\n    }\r\n    return (window.scrollY - canvasOffset) / windowHeight;\r\n}\r\n\r\nfunction normalize(value, min_value, max_value) {\r\n    if (max_value === min_value) {\r\n        console.warn('Cannot normalize: max and min values are equal.');\r\n        return value; // or throw an error\r\n    }\r\n    return (value - min_value) / (max_value - min_value);\r\n}\r\n\r\nexport {calculateScrollOffset, lerp, normalize};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst Divider = ({ fullWidth,width, ...rest }) => {\r\n    const classes = useStyles({ fullWidth, width });\r\n    return (\r\n        <div className={classes.root} {...rest}>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"inline\",\r\n        width: (props) => (props.fullWidth ? \"100%\" : props.width),\r\n        height: \"1px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default Divider;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles, Container, Typography, useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport Divider from \"../components/Divider\";\r\n\r\nconst SectionContainer = ({ children, maxWidth, full, reverse, title, padding, ...rest }) => {\r\n    const classes = useStyles({ full, maxWidth, padding });\r\n    const titleControls = useAnimation();\r\n    const contentControls = useAnimation();\r\n    const [titleRef, titleInView] = useInView();\r\n    const [contentRef, contentInView] = useInView();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n    // const [contentStart, setContentStart]=useState(false)\r\n\r\n    useEffect(() => {\r\n        if (titleInView) {\r\n            titleControls.start(\"visible\");\r\n        }\r\n    }, [titleControls, titleInView]);\r\n\r\n    useEffect(() => {\r\n        if (contentInView) {\r\n            // setContentStart(true)\r\n            contentControls.start(\"visible\");\r\n        }\r\n    }, [contentControls, contentInView]);\r\n\r\n    return (\r\n        <Container component=\"section\" className={classes.container} {...rest}>\r\n            {title && (\r\n                <motion.div\r\n                    ref={titleRef}\r\n                    animate={titleControls}\r\n                    initial=\"hidden\"\r\n                    transition={{\r\n                        delay: 0.3,\r\n                        type: \"spring\",\r\n                        stiffness: 100,\r\n                        damping: 20,\r\n                    }}\r\n                    variants={{\r\n                        visible: { opacity: 1, x: 0 },\r\n                        hidden: { opacity: 0, x: reverse ? 0 : 0 },\r\n                    }}\r\n                    className={classes.titleContainer}\r\n                >\r\n                    <Divider width=\"20%\"  />\r\n                    <Typography variant={isTablet?\"h5\":(isMobile?\"h6\":\"h4\")} color=\"primary\" className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <Divider fullWidth />\r\n                </motion.div>\r\n            )}\r\n            <motion.div\r\n                ref={contentRef}\r\n                animate={contentControls}\r\n                initial=\"hidden\"\r\n                transition={{\r\n                    delay: 0.5,\r\n                    type: \"spring\",\r\n                    stiffness: 100,\r\n                    damping: 20,\r\n                    when:\"beforeChildren\"\r\n                }}\r\n                variants={{\r\n                    visible: { opacity: 1, y: 0 },\r\n                hidden: { opacity: 0, y: -50 },\r\n                }}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        paddingTop: props => props.padding ? `${props.padding}px` : \"80px\",\r\n        paddingBottom: props => props.padding ? `${props.padding}px` : \"80px\",\r\n        maxWidth: props => props.maxWidth ? props.maxWidth : theme.breakpoints.values.xl,\r\n    },\r\n    titleContainer: {\r\n        paddingBottom: theme.spacing(8),\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        maxWidth:\"100%\",\r\n    },\r\n    title: {\r\n        margin: theme.spacing(0, 4),\r\n        textTransform:\"uppercase\",\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    childrenContainer: {\r\n        minHeight: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default SectionContainer;\r\n","import React, { forwardRef, useEffect, useContext, useState } from \"react\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\nimport { OBJLoader, GLTFLoader } from \"three-stdlib\";\r\nimport { useLoader, useFrame } from \"@react-three/fiber\";\r\n\r\nconst Model3D = forwardRef(({ path, material, position, rotation, scale, canRotate }, ref) => {\r\n\r\n    const { isLoading } = useContext(loaderContext);\r\n\r\n    // Choose the loader based on file extension\r\n    const isGLB = path.toLowerCase().endsWith(\".glb\") || path.toLowerCase().endsWith(\".gltf\");\r\n    const loadedData = useLoader(isGLB ? GLTFLoader : OBJLoader, path);\r\n\r\n    // If loading a glb, we need to extract the scene\r\n    const obj = isGLB ? loadedData.scene : loadedData;\r\n\r\n    // Drag-related state\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [lastX, setLastX] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading && obj) {\r\n            // Traverse the object tree and apply material and shadow properties to meshes\r\n            obj.traverse((child) => {\r\n                if (child.isMesh) {\r\n                    if (material) {\r\n                        child.material = material;\r\n                    }\r\n                    child.castShadow = true;\r\n                    child.receiveShadow = true;\r\n                }\r\n            });\r\n        }\r\n    }, [isLoading, material, obj]);\r\n\r\n    // Drag rotation logic\r\n    const handlePointerDown = (e) => {\r\n        e.stopPropagation();\r\n        setIsDragging(true);\r\n        setLastX(e.clientX);\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n        setIsDragging(false);\r\n        setLastX(null);\r\n    };\r\n\r\n    const handlePointerMove = (e) => {\r\n        if (!isDragging || lastX === null) return;\r\n        const deltaX = e.clientX - lastX;\r\n        if (ref.current) {\r\n            ref.current.rotation.y += deltaX * 0.01;\r\n        }\r\n        setLastX(e.clientX);\r\n    };\r\n\r\n    useFrame(() => {\r\n        // Optional: implement momentum or easing here\r\n    });\r\n\r\n    return (\r\n        <mesh>\r\n            {obj && \r\n            <primitive\r\n                ref={ref}\r\n                object={obj}\r\n                scale={scale}\r\n                position={position}\r\n                rotation={rotation}\r\n                castShadow\r\n                receiveShadow\r\n                onPointerDown={canRotate? handlePointerDown : null}\r\n                onPointerUp={canRotate? handlePointerUp : null}\r\n                onPointerOut={canRotate? handlePointerUp : null}\r\n                onPointerMove={canRotate? handlePointerMove : null}\r\n            />}\r\n        </mesh>\r\n    );\r\n});\r\n\r\nexport default React.memo(Model3D);","import React, { useRef, useEffect, Suspense } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport {calculateScrollOffset, lerp} from \"../CustomMath\";\r\nimport Model3D from \"./Model3D\";\r\n\r\nconst ArchangelMichaelStatue3D = ({ path, material, position, rotation, scale, scrollRotationFactor }) => {\r\n    const modelRef = useRef();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    //const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n    let scrollOffset = 0;\r\n\r\n    const lerpSmoothFactor = 0.1;\r\n\r\n    const { gl } = useThree();\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        canvasRef.current = gl.domElement;\r\n\r\n        if (canvasRef.current) {\r\n            // Set a CSS transition for opacity so changes animate over 1 second\r\n            canvasRef.current.style.transition = \"opacity 1s ease-in-out\";\r\n        }\r\n    }, [gl]);\r\n\r\n    useFrame(() => {\r\n        if (modelRef.current && canvasRef.current) {\r\n            scrollOffset = calculateScrollOffset(canvasRef.current.offsetTop, -550);\r\n\r\n            let limitedScrollOffset = (scrollOffset * 2 > 1) ? 1 : scrollOffset * 2;\r\n            \r\n            // Calculate new position, rotation and scale values\r\n\r\n            let xPositionValue = 0;\r\n            let yPositionValue = 0;\r\n            let yRotationValue = 0;\r\n            let scaleValue = scale;\r\n\r\n            if(isMobile) {\r\n                xPositionValue = position[0];\r\n                yPositionValue = position[1] - limitedScrollOffset * 8;\r\n\r\n                yRotationValue = limitedScrollOffset * scrollRotationFactor;\r\n            } else {\r\n                xPositionValue = position[0] + limitedScrollOffset * 2;\r\n                yPositionValue = position[1] - limitedScrollOffset * 15.25;\r\n\r\n                yRotationValue = limitedScrollOffset * scrollRotationFactor;\r\n            }\r\n            scaleValue = (1 + limitedScrollOffset) * scale;\r\n\r\n            // Apply scroll animation\r\n\r\n            modelRef.current.position.x = lerp(modelRef.current.position.x, xPositionValue, lerpSmoothFactor);\r\n            modelRef.current.position.y = lerp(modelRef.current.position.y, yPositionValue, lerpSmoothFactor);\r\n\r\n            const initialYRotation = rotation[1] * (Math.PI / 180);\r\n            modelRef.current.rotation.y == rotation[1] ? modelRef.current.rotation.y = initialYRotation + yRotationValue : modelRef.current.rotation.y = lerp(modelRef.current.rotation.y, initialYRotation + yRotationValue, lerpSmoothFactor);\r\n\r\n            const smoothedScaleValue = lerp(modelRef.current.scale.x, scaleValue, lerpSmoothFactor);\r\n            modelRef.current.scale.set(smoothedScaleValue, smoothedScaleValue, smoothedScaleValue);\r\n\r\n            // Fade the canvas opacity\r\n\r\n            canvasRef.current.style.opacity = scrollOffset >= (isMobile? 0.75 : 1) ? 0 : 1;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Suspense fallback={ null }>\r\n            <Model3D ref={modelRef} path={path} material={material} position={position} rotation={rotation} scale={scale} canRotate={false} />\r\n        </Suspense>\r\n    )\r\n};\r\n\r\nexport default ArchangelMichaelStatue3D;","import { useRef, useEffect } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { RGBELoader } from 'three-stdlib'\r\nimport { PMREMGenerator, FloatType } from 'three'\r\nimport { calculateScrollOffset } from '../CustomMath';\r\n\r\nconst ReflectionHDR = ({ url, scrollOffsetMultiplier }) => {\r\n    const { gl, scene } = useThree();\r\n        const canvasRef = useRef();\r\n        const envMapRef = useRef(null);\r\n        let scrollOffset = 0;\r\n      \r\n        useEffect(() => {\r\n            canvasRef.current = gl.domElement;\r\n    \r\n            const pmremGenerator = new PMREMGenerator(gl)\r\n            pmremGenerator.compileEquirectangularShader()\r\n        \r\n            new RGBELoader()\r\n                .setDataType(FloatType)\r\n                .load(url, (texture) => {\r\n                    const envMap = pmremGenerator.fromEquirectangular(texture).texture\r\n                    scene.environment = envMap\r\n                    envMapRef.current = envMap\r\n                    texture.dispose()\r\n                    pmremGenerator.dispose()\r\n                })\r\n        }, [gl, scene, url]);\r\n    \r\n        \r\n        useFrame(() => {\r\n            if (canvasRef.current) {\r\n                scrollOffset = calculateScrollOffset(canvasRef.current.getBoundingClientRect().top + window.scrollY + canvasRef.current.offsetTop, -200);\r\n    \r\n                if(scrollOffset < 0) {\r\n                    return;\r\n                }\r\n                \r\n                // Normalize scrollOffset\r\n                const fadeFactor = Math.max(0, Math.min(1, 1 - scrollOffset * scrollOffsetMultiplier));\r\n    \r\n                if(fadeFactor === 0) {\r\n                    return;\r\n                }\r\n                \r\n                // Traverse all meshes and set envMapIntensity\r\n                scene.traverse((child) => {\r\n                    if (child.isMesh && child.material) {\r\n                        const materials = Array.isArray(child.material) ? child.material : [child.material];\r\n                    \r\n                        materials.forEach((mat) => {\r\n                            // Only update if it’s a standard or physical material\r\n                            if ((mat.isMeshStandardMaterial || mat.isMeshPhysicalMaterial) && mat.envMapIntensity !== undefined) {\r\n                                mat.envMapIntensity = fadeFactor;\r\n                                mat.envMap = scene.environment;\r\n                                mat.needsUpdate = true;\r\n                                //console.log(scrollOffset, fadeFactor, mat.envMapIntensity);\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n            }\r\n        });\r\n      \r\n        return null;\r\n};\r\n\r\nexport default ReflectionHDR;","import React, { useRef, useEffect, Suspense } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport {calculateScrollOffset, lerp, normalize} from \"../CustomMath\";\r\nimport Model3D from \"./Model3D\";\r\nimport ReflectionHDR from './ReflectionHDR';\r\nimport lightsHDR from \"../../assets/hdri/lights-darkness.hdr\";\r\n\r\nconst AppleVisionPro3D = ({ path, position, rotation, scale, scrollRotationFactor }) => {\r\n    const modelRef = useRef();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    let scrollOffset = 0;\r\n    const smoothFactor = 0.1;\r\n\r\n    const { gl } = useThree();\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        canvasRef.current = gl.domElement;\r\n\r\n        if (canvasRef.current) {\r\n            // Set a CSS transition for opacity so changes animate over 1 second\r\n            //canvasRef.current.style.transition = \"opacity 1s ease-in-out\";\r\n        }\r\n    }, [gl]);\r\n\r\n    useFrame(() => {\r\n        if (modelRef.current && canvasRef.current) {\r\n            //console.log(canvasRef.current.getBoundingClientRect().top, window.scrollY, canvasRef.current.offsetTop);\r\n            //console.log(canvasRef.current.getBoundingClientRect().top + window.scrollY + canvasRef.current.offsetTop);\r\n            scrollOffset = calculateScrollOffset(canvasRef.current.getBoundingClientRect().top + window.scrollY + canvasRef.current.offsetTop, -200);\r\n            scrollOffset = (scrollOffset + 1) * 1.2;\r\n            //console.log(scrollOffset);\r\n\r\n            if(scrollOffset < 0) {\r\n                return;\r\n            }\r\n            \r\n            let xPositionValue = 0;\r\n            let yPositionValue = 0;\r\n\r\n            const initialYRotation = rotation[1]; // * (Math.PI / 180);\r\n            let yRotationValue = 0;\r\n\r\n            let smoothedScaleValue = scale;\r\n\r\n            yPositionValue = position[1] - Math.pow(scrollOffset * 0.5, 3);\r\n\r\n            if(scrollOffset < 1) {\r\n\r\n                xPositionValue = position[0] + scrollOffset * -position[0];\r\n                //yPositionValue = Math.min(position[1], position[1] - scrollOffset * ((scrollOffset-0.5)/2));\r\n\r\n                yRotationValue = -scrollOffset * scrollRotationFactor;\r\n\r\n            } else {\r\n\r\n                xPositionValue = position[0] + 1 * -position[0];\r\n                //yPositionValue = position[1] - scrollOffset * ((1-0.5)/2) - (scrollOffset - 1) * 0.35;\r\n\r\n                yRotationValue = -1 * scrollRotationFactor;\r\n\r\n            }\r\n\r\n            if(isMobile) {\r\n                smoothedScaleValue = lerp(modelRef.current.scale.x, Math.max(scale, (1+scrollOffset) * Math.pow((scrollOffset),2) * scale * 1.3 * 2 ), smoothFactor);\r\n            } else {\r\n                \r\n                smoothedScaleValue = lerp(modelRef.current.scale.x, Math.max(scale, (1+scrollOffset) * Math.pow((scrollOffset),2) * scale * 1.3 ), smoothFactor);\r\n            }\r\n\r\n            // Position scroll animation\r\n            modelRef.current.position.x = lerp(modelRef.current.position.x, xPositionValue, smoothFactor);\r\n            modelRef.current.position.y = lerp(modelRef.current.position.y, yPositionValue, smoothFactor);\r\n\r\n            // Rotation scroll animation\r\n            modelRef.current.rotation.y = lerp(modelRef.current.rotation.y, initialYRotation + yRotationValue, smoothFactor);\r\n\r\n            // Scale scroll animation\r\n            modelRef.current.scale.set(smoothedScaleValue, smoothedScaleValue, smoothedScaleValue);\r\n\r\n            // Fade the canvas opacity\r\n\r\n            const opacityFadeOutLowLimitOffset = 2.0;\r\n            const opacityFadeOutHighLimitOffset = 2.4;\r\n\r\n            if(scrollOffset > opacityFadeOutHighLimitOffset) {\r\n                canvasRef.current.style.opacity = 0;\r\n            } else if(scrollOffset > opacityFadeOutLowLimitOffset) {\r\n                canvasRef.current.style.opacity = Math.max(0, 1 - normalize(scrollOffset, opacityFadeOutLowLimitOffset, opacityFadeOutHighLimitOffset) * 2);\r\n            }\r\n            \r\n        }\r\n    });\r\n\r\n    return (\r\n        <Suspense fallback={ null }>\r\n            <Model3D ref={modelRef} path={path} material={null} position={position} rotation={rotation} scale={scale} canRotate={false} />\r\n            <ReflectionHDR url={lightsHDR} scrollOffsetMultiplier={4} />\r\n        </Suspense>\r\n    )\r\n};\r\n\r\nexport default AppleVisionPro3D;","import React, { useRef, useEffect, useContext, Suspense } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport {calculateScrollOffset, lerp, normalize} from \"../CustomMath\";\r\nimport Model3D from \"./Model3D\";\r\n\r\nconst REDCamera3D = ({ path, position, rotation, scale, scrollRotationFactor }) => {\r\n    const modelRef = useRef();\r\n    const pointLightRef = useRef();\r\n    const spotLightRef = useRef();\r\n    const theme = useTheme();\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    let scrollOffset = 0;\r\n    const smoothFactor = 0.1;\r\n\r\n    const { gl, scene } = useThree();\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        canvasRef.current = gl.domElement;\r\n\r\n        if (spotLightRef.current && modelRef.current) {\r\n            spotLightRef.current.target = modelRef.current;\r\n            scene.add(modelRef.current); // required for it to work\r\n        }\r\n    }, [gl, scene]);\r\n\r\n    useFrame(() => {\r\n        if (modelRef.current && canvasRef.current) {\r\n            scrollOffset = calculateScrollOffset(canvasRef.current.getBoundingClientRect().top + window.scrollY + canvasRef.current.offsetTop, -200);\r\n            scrollOffset = (scrollOffset + 1) * 1.2;\r\n\r\n            if(scrollOffset < 0) {\r\n                return;\r\n            }\r\n            \r\n            let xPositionValue = 0;\r\n            let yPositionValue = 0;\r\n\r\n            const initialYRotation = rotation[1]; // * (Math.PI / 180);\r\n            let yRotationValue = 0;\r\n\r\n            let smoothedScaleValue = scale;\r\n\r\n            yPositionValue = position[1] - Math.pow(scrollOffset * 0.3, 2);\r\n\r\n            if(isMobile) {\r\n                xPositionValue = position[0];\r\n            } else {\r\n                if(scrollOffset > 1) {\r\n                    xPositionValue = position[0];\r\n                } else {\r\n                    xPositionValue = position[0] -scrollOffset + 1;\r\n                }\r\n            }\r\n\r\n            if(isMobile) {\r\n                if(scrollOffset > 1) {\r\n                    yRotationValue = 1 * scrollRotationFactor;\r\n                }\r\n                else if(scrollOffset < 0.25) {\r\n                    yRotationValue = 0;\r\n                }\r\n                else {\r\n                    yRotationValue = (scrollOffset-0.25) * 1.3 * scrollRotationFactor;\r\n                }    \r\n            } else {\r\n                if(scrollOffset > 1.5) {\r\n                    yRotationValue = 1 * scrollRotationFactor;\r\n                    //xPositionValue = position[0];\r\n                }\r\n                else if(scrollOffset < 0.75) {\r\n                    yRotationValue = 0;\r\n                    //xPositionValue = 0.25;\r\n                }\r\n                else {\r\n                    yRotationValue = (scrollOffset-0.75) * 1.35 * scrollRotationFactor;\r\n                    //xPositionValue = position[0] + (1-scrollOffset)/2.5;\r\n                }    \r\n            }\r\n                    \r\n\r\n            if(isMobile) {\r\n                //smoothedScaleValue = lerp(modelRef.current.scale.x, Math.max(scale, (1+scrollOffset) * Math.pow((scrollOffset),2) * scale * 1.3 * 2 ), smoothFactor);\r\n                smoothedScaleValue = lerp(modelRef.current.scale.x, Math.max(scale, (1+scrollOffset) * Math.pow((scrollOffset),4) * scale * 1.3 * 1.5 ), smoothFactor);\r\n            } else {\r\n                smoothedScaleValue = lerp(modelRef.current.scale.x, Math.max(scale, (1+scrollOffset) * Math.pow((scrollOffset),4) * scale * 1.3 ), smoothFactor);\r\n            }\r\n\r\n            // Position scroll animation\r\n            modelRef.current.position.x == position[0] ? modelRef.current.position.x = xPositionValue : modelRef.current.position.x = lerp(modelRef.current.position.x, xPositionValue, smoothFactor);\r\n            modelRef.current.position.y == position[1] ? modelRef.current.position.y = yPositionValue : modelRef.current.position.y = lerp(modelRef.current.position.y, yPositionValue, smoothFactor);\r\n            \r\n            // Rotation scroll animation\r\n            modelRef.current.rotation.y = lerp(modelRef.current.rotation.y, initialYRotation + yRotationValue, smoothFactor);\r\n\r\n            // Scale scroll animation\r\n            modelRef.current.scale.set(smoothedScaleValue, smoothedScaleValue, smoothedScaleValue);\r\n\r\n            // Lights\r\n            if(pointLightRef.current) {\r\n                pointLightRef.current.position.x = lerp(pointLightRef.current.position.x, scrollOffset, smoothFactor);\r\n            }\r\n\r\n            // Fade the canvas opacity\r\n\r\n            const opacityFadeOutLowLimitOffset = 1.9;\r\n            const opacityFadeOutHighLimitOffset = 2.4;\r\n\r\n            if(scrollOffset > opacityFadeOutHighLimitOffset) {\r\n                canvasRef.current.style.opacity = 0;\r\n            } else if(scrollOffset > opacityFadeOutLowLimitOffset) {\r\n                canvasRef.current.style.opacity = Math.max(0, 1 - normalize(scrollOffset, opacityFadeOutLowLimitOffset, opacityFadeOutHighLimitOffset) * 2);\r\n            }\r\n            \r\n        }\r\n    });\r\n\r\n    return (\r\n        <Suspense fallback={ null }>\r\n            <Model3D ref={modelRef} path={path} material={null} position={position} rotation={rotation} scale={scale} canRotate={false}/>\r\n            <pointLight ref={pointLightRef} position={[0, -0.1, 0.5]} intensity={isDarkMode ? 5 : 10} />\r\n            <spotLight ref={spotLightRef} position={[-0.5, 0, -2]} intensity={isDarkMode ? 1 : 5}/>\r\n        </Suspense>\r\n    )\r\n};\r\n\r\nexport default REDCamera3D;","import React, { useRef, useEffect, useContext, useMemo, useState, Suspense } from 'react';\r\nimport { useThree, useFrame } from '@react-three/fiber';\r\nimport { Vector3, Color } from 'three';\r\nimport { EffectComposer, Vignette, Bloom } from '@react-three/postprocessing'\r\nimport { LensFlare } from \"@andersonmancini/lens-flare\";\r\nimport { useTheme, useMediaQuery } from \"@material-ui/core\";\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport {calculateScrollOffset, normalize} from \"../CustomMath\";\r\nimport Model3D from \"./Model3D\";\r\nimport ReflectionHDR from './ReflectionHDR';\r\nimport studioHDR from \"../../assets/hdri/studio.hdr\";\r\n\r\nconst BLOOM_LAYER = 1;\r\n\r\nconst LightBulb3D = ({ path, position, rotation, scale }) => {\r\n    const { gl, camera } = useThree();\r\n    const canvasRef = useRef();\r\n    const modelRef = useRef();\r\n    const theme = useTheme();\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n    //console.log(isMobile, isTablet);\r\n\r\n    const lensFlareColor = useMemo(() => new Color(56, 22, 11), []);\r\n    const lensFlarePos = useMemo(() => \r\n        isTablet ? (new Vector3(position[0]+0.025, position[1]+0.2, 0)) : \r\n        ( isMobile ? (new Vector3(position[0]+0.005, position[1]+0.12, 0)) : (new Vector3(position[0]+0.01, position[1]+0.21, 0)) )\r\n        , []);\r\n    //console.log(lensFlarePos);\r\n\r\n    let scrollOffset = 0;\r\n    const smoothFactor = 0.1;\r\n\r\n    const turnedOnRef = useRef(false);\r\n    const [effectsEnabled, setEffectsEnabled] = useState(false); // trigger re-render for Bloom component\r\n\r\n\r\n    useEffect(() => {\r\n        canvasRef.current = gl.domElement;\r\n\r\n        if (canvasRef.current) {\r\n\r\n        }\r\n\r\n    }, [gl]);\r\n\r\n    // Make sure the camera sees the bloom layer too\r\n    useEffect(() => {\r\n        camera.layers.enable(BLOOM_LAYER);\r\n    }, [camera]);\r\n\r\n    useFrame(() => {\r\n        if (modelRef.current && canvasRef.current) {\r\n            scrollOffset = calculateScrollOffset(canvasRef.current.getBoundingClientRect().top + window.scrollY + canvasRef.current.offsetTop, -200);\r\n            //console.log(scrollOffset);\r\n\r\n            // Turn on/off bloom layer (i.e. light) based on scroll position\r\n\r\n            const shouldTurnOn = scrollOffset > (isTablet ? 0.0 : ( isMobile ? 0.1 : 0.25 ));\r\n\r\n            if (shouldTurnOn !== turnedOnRef.current) {\r\n                turnedOnRef.current = shouldTurnOn;\r\n                //console.log(`Light bulb turned ${turnedOnRef.current ? 'on' : 'off'}`);\r\n\r\n                // Toggle bloom layer on model\r\n                if (modelRef.current) {\r\n                    if (shouldTurnOn) {\r\n                        modelRef.current.layers.enable(BLOOM_LAYER);\r\n                    } else {\r\n                        modelRef.current.layers.disable(BLOOM_LAYER);\r\n                    }\r\n                }\r\n        \r\n                // Trigger re-render to update Bloom\r\n                setEffectsEnabled(shouldTurnOn);\r\n            }\r\n\r\n            // Fade the canvas opacity\r\n\r\n            const opacityZeroLowLimitOffset = isTablet ? -0.5 : ( isMobile ? -0.7 : -0.5 );\r\n            const opacityZeroHighLimitOffset = 1.0;\r\n            const opacityFadeInHighLimitOffset = 0.0;\r\n            const opacityFadeOutLowLimitOffset = isTablet ? 0.6 : ( isMobile ? 0.6 : 0.8 );\r\n            let opacity = 1;\r\n\r\n            if (scrollOffset < opacityZeroLowLimitOffset) {\r\n                opacity = 0;\r\n            } else if (scrollOffset < opacityFadeInHighLimitOffset) {\r\n                opacity = Math.min(1, normalize(scrollOffset, opacityZeroLowLimitOffset, opacityFadeInHighLimitOffset) * 5);\r\n            } else if (scrollOffset > opacityZeroHighLimitOffset) {\r\n                opacity = 0;\r\n            } else if (scrollOffset > opacityFadeOutLowLimitOffset) {\r\n                opacity = Math.max(0, 1-normalize(scrollOffset, opacityFadeOutLowLimitOffset, opacityZeroHighLimitOffset) * 5);\r\n            }\r\n            canvasRef.current.style.opacity = opacity;\r\n            //console.log(scrollOffset, canvasRef.current.style.opacity);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Suspense fallback={ null }>\r\n\r\n            <Model3D \r\n                ref={modelRef}\r\n                path={path}\r\n                material={null}\r\n                position={position}\r\n                rotation={rotation}\r\n                scale={scale}\r\n                canRotate={true}\r\n            />\r\n            \r\n            <ReflectionHDR \r\n                url={studioHDR} \r\n                scrollOffsetMultiplier={0}\r\n            />\r\n            \r\n            {/* Postprocessing */}\r\n            <EffectComposer multisampling={8}>\r\n                {/* \r\n                <Bloom\r\n                    intensity={turnedOnRef.current ? 1.2 : 0}\r\n                    luminanceThreshold={0.1}\r\n                    luminanceSmoothing={0.9}\r\n                    height={1024} // ← bump this up from default 300\r\n                />\r\n                */}\r\n                <LensFlare \r\n                    position={lensFlarePos}\r\n                    opacity={turnedOnRef.current ? (isDarkMode ? 0.2 : 0.1) : 0.0}\r\n                    colorGain={lensFlareColor}\r\n                    glareSize={0.1}\r\n                    starPoints={1}\r\n                    animated={false}\r\n                    followMouse={false}\r\n                    anamorphic={false}\r\n                    flareSpeed={0.2}\r\n                    flareShape={0.1}\r\n                    flareSize={0.05}\r\n                    secondaryGhosts={false}\r\n                    starBurst={false}\r\n                    haloScale={0.01}\r\n                />\r\n                {/* \r\n                <Vignette\r\n                    eskil={false}        // Use the \"fast\" version of the vignette\r\n                    offset={0.1}         // How far into the screen the vignette starts [0–1]\r\n                    darkness={1.5}       // How dark the corners get\r\n                />\r\n                */}\r\n            </EffectComposer>\r\n        </Suspense>\r\n    )\r\n};\r\n\r\nexport default LightBulb3D;","import React, { useEffect, useRef, useState, useContext, Suspense } from 'react'\r\nimport ThemeContext from '../../contexts/themeContext';\r\nimport { useThree, useLoader, useFrame } from '@react-three/fiber'\r\nimport { TextureLoader } from 'three'\r\n\r\nconst SphericalUI = ({triggerShowUI, triggerDisableUI, UIImageDark, UIImageLight, opacityNormalizer, spherePos, sphereRot, sphereRad}) => {\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n\r\n    const materialRef = useRef();\r\n    const texture = useLoader(TextureLoader, isDarkMode ? UIImageDark : UIImageLight);\r\n    const side = useThree().FrontSide;\r\n\r\n    const [shouldRenderUI, setShouldRenderUI] = useState(false);\r\n    const [opacity, setOpacity] = useState(0);\r\n    const [fadeState, setFadeState] = useState('idle'); // 'idle' | 'fadingIn' | 'visible' | 'fadingOut'\r\n    const holdTimer = useRef(null);\r\n\r\n    let holdTime = 1000; // Adjust this value to control the hold time before fading in/out\r\n    let fadeSpeed = 0.75; // Adjust this value to control the speed of the fade in/out\r\n    \r\n    useEffect(() => {\r\n        if (triggerShowUI && fadeState === 'idle') {\r\n            setShouldRenderUI(true);\r\n            setFadeState('fadingIn');\r\n            //console.log('fadingIn');\r\n            setOpacity(0);\r\n            clearTimeout(holdTimer.current);\r\n        }\r\n        if(triggerDisableUI && (fadeState === 'visible' || fadeState === 'fadingIn')) {\r\n            //console.log('Spherical UI was informed that mouse clicked canvas');\r\n            setFadeState('fadingOut');\r\n            //console.log('fadingOut');\r\n            clearTimeout(holdTimer.current);\r\n        }\r\n    }, [triggerShowUI]);\r\n\r\n    useFrame((_, delta) => {\r\n        if (!shouldRenderUI) return;\r\n\r\n        if (fadeState === 'fadingIn') {\r\n            //console.log('fadingIn...');\r\n            setOpacity(prev => {\r\n                const next = prev + delta * fadeSpeed;\r\n                if (next >= 1) {\r\n                    setFadeState('visible');\r\n                    holdTimer.current = setTimeout(() => {\r\n                        setFadeState('fadingOut');\r\n                        //console.log('fadingOut');\r\n                    }, holdTime);\r\n                    return 1;\r\n                }\r\n                return next;\r\n            });\r\n        }\r\n        \r\n          if (fadeState === 'fadingOut') {\r\n            //console.log('fadingOut...');\r\n            setOpacity(prev => {\r\n                const next = prev - delta * fadeSpeed;\r\n                if (next <= 0) {\r\n                    setShouldRenderUI(false);\r\n                    setFadeState('idle');\r\n                    //console.log('idle');\r\n                    return 0;\r\n                }\r\n                return next;\r\n            });\r\n        }\r\n\r\n        if (materialRef.current) {\r\n            materialRef.current.opacity = opacity * opacityNormalizer; // Adjust opacity based on the state\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Suspense fallback={null}>\r\n            {shouldRenderUI &&\r\n            <mesh position={spherePos} rotation={sphereRot} renderOrder={999}>\r\n                <sphereGeometry args={[sphereRad, 64, 64]} />\r\n                <meshBasicMaterial\r\n                    map={texture}\r\n                    transparent={true}\r\n                    //color={isDarkMode ? 'white' : 'black'}\r\n                    side={side} // set to 2 to enable DoubleSide, so it's visible inside and out\r\n                    depthWrite={false} // Disabled because, even though a material is transparent, by default it still writes to the depth buffer, which can cause objects behind it to disappear or clip when viewed at certain angles\r\n                    depthTest={false}\r\n                    opacity={opacity * opacityNormalizer} \r\n                    alphaTest={0.1} // Optional: helps discard very transparent pixels\r\n                />\r\n            </mesh>}\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default SphericalUI;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core\";\r\nimport { Canvas, extend, useThree } from '@react-three/fiber'\r\nimport { Stats, OrbitControls, Splat } from '@react-three/drei'\r\nimport { Camera3D } from \"./Camera3D\";\r\nimport SphericalUI from \"./SphericalUI\";\r\n\r\nimport FilipeGS from \"../../assets/models/filipe_transparency-corrected.splat\";\r\nimport OrbitControlsUIDark from \"../../assets/images/OrbitControl_Arrows_DarkMode.png\";\r\nimport OrbitControlsUILight from \"../../assets/images/OrbitControl_Arrows_LightMode.png\";\r\n\r\n// import { LumaSplatsThree, LumaSplatsSemantics } from \"@lumaai/luma-web\";\r\n// extend( { LumaSplats: LumaSplatsThree } ); // Make LumaSplatsThree available to R3F\r\n\r\nconst ProfilePicture3D = () => {\r\n    const classes = useStyles();\r\n    //const theme = useTheme();\r\n\r\n    const canvasWrapperRef = useRef();\r\n    const [showUIDelayed, setShowUIDelayed] = useState(false);\r\n    const [triggerShowUI, setTriggerShowUI] = useState(false);\r\n    const [triggerDisableUI, setTriggerDisableUI] = useState(false);\r\n    const timerRef = useRef(null);\r\n\r\n    let settings = {};\r\n    settings.camera = {\r\n        fov: 60,\r\n        zoom: 1.2,\r\n    }\r\n    settings.ui = {\r\n        loadDelay: 3000,\r\n        defaultDuration: 2000,\r\n        imageDark: OrbitControlsUIDark,\r\n        imageLight: OrbitControlsUILight,\r\n        opacity: 0.75,\r\n        spherePos: [0, 0, 0],\r\n        sphereRot: [0, -Math.PI / 6, 0],\r\n        sphereRad: 1.8,\r\n    }\r\n    settings.splat = {\r\n        src: FilipeGS,\r\n        scale: 16,\r\n        position: [0, -2.4, 0.15],\r\n        rotation: [0, 0, 0], // [0, -Math.PI / 8, 0],\r\n    }\r\n    settings.light = {\r\n        ambient: 0.5,\r\n        point: [-10, -10, -10],\r\n        spotPos: [10, 10, 10],\r\n        spotAngle: 0.15,\r\n        spotPenumbra: 1,\r\n    }\r\n\r\n    // Delay UI mount to ensure rest of scene is set\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setShowUIDelayed(true);\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        // Fade out UI after some time in view\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting) {\r\n                    const timeout = setTimeout(() => {\r\n                        setShowUIDelayed(true);\r\n                        setTriggerShowUI(true);\r\n                        clearTimeout(timerRef.current);\r\n                        timerRef.current = setTimeout(() => {\r\n                            setTriggerShowUI(false);\r\n                        }, settings.ui.defaultDuration);\r\n                    }, settings.ui.loadDelay);\r\n                }\r\n            },\r\n            { threshold: 0.1 }\r\n        )\r\n\r\n        // Also fade out on mouse hover\r\n        const handleMouseEnter = () => {\r\n            //console.log('Mouse entered canvas');\r\n            setTriggerShowUI(true);\r\n            clearTimeout(timerRef.current);\r\n            timerRef.current = setTimeout(() => {\r\n                setTriggerShowUI(false);\r\n            }, settings.ui.defaultDuration);\r\n        }\r\n\r\n        // Ensure UI doesn't appear again once it has been interacted with \r\n        const handleMousePointerDown = () => {\r\n            //console.log('Mouse clicked canvas');\r\n            clearTimeout(timerRef.current);\r\n            setTriggerShowUI(false);\r\n            setTriggerDisableUI(true);\r\n            observer.unobserve(canvasWrapperRef.current);\r\n            canvasWrapperRef.current.removeEventListener('mouseenter', handleMouseEnter);\r\n        }\r\n        \r\n        // Initiate observer and event listeners\r\n        if (canvasWrapperRef.current) {\r\n            observer.observe(canvasWrapperRef.current);\r\n            canvasWrapperRef.current.addEventListener('mouseenter', handleMouseEnter);\r\n            canvasWrapperRef.current.addEventListener('pointerdown', handleMousePointerDown);\r\n        }\r\n        \r\n        // Cleanup function to remove the observer and event listeners\r\n        return () => {\r\n            if (canvasWrapperRef.current) {\r\n                observer.unobserve(canvasWrapperRef.current);\r\n                canvasWrapperRef.current.removeEventListener('mouseenter', handleMouseEnter);\r\n            }\r\n            clearTimeout(timerRef.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.canvasWrapper} ref={canvasWrapperRef}>\r\n            {/*\r\n            <Canvas className={classes.ProfileImg}>\r\n                <Camera3D fov={settings.camera.fov} zoom={settings.camera.zoom}/>\r\n\r\n                {showUIDelayed && <SphericalUI triggerShowUI={triggerShowUI} triggerDisableUI={triggerDisableUI} UIImageDark={settings.ui.imageDark} UIImageLight={settings.ui.imageLight} opacityNormalizer={settings.ui.opacity} spherePos={settings.ui.spherePos} sphereRot={settings.ui.sphereRot} sphereRad={settings.ui.sphereRad} />}\r\n                \r\n                <Splat\r\n                    src={settings.splat.src} \r\n                    scale={settings.splat.scale} \r\n                    position={settings.splat.position}\r\n                    rotation={settings.splat.rotation} // Rotate to face the camera\r\n                />\r\n                \r\n                <ambientLight intensity={settings.light.ambient} />\r\n                <spotLight position={settings.light.spotPos} angle={settings.light.spotAngle} penumbra={settings.light.spotPenumbra} />\r\n                <pointLight position={settings.light.point} />\r\n                \r\n                <OrbitControls \r\n                    enablePan={false} \r\n                    enableZoom={false}\r\n                    minPolarAngle={Math.PI / 2.5}\r\n                    maxPolarAngle={Math.PI / 1.7}\r\n                    minAzimuthAngle={Math.PI / 3}\r\n                    maxAzimuthAngle={1.8 * Math.PI / 3}\r\n                /> \r\n\r\n            </Canvas>\r\n            */}\r\n            <div className={classes.canvasOverlay}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    canvasWrapper: {\r\n        position: \"relative\",\r\n        height:\"70vh\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height:\"50vh\",\r\n            marginBottom: \"5%\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            height:\"40vh\",\r\n            marginBottom: \"10%\",\r\n        },\r\n    },\r\n    canvasOverlay: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"101%\",\r\n        height: \"101%\",\r\n        pointerEvents: \"none\", /* Ensure the overlay doesn't block interactions with the canvas */\r\n        boxShadow: `0 0 60px 80px ${theme.palette.background.default} inset`,\r\n        borderRadius: \"50%\",\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            boxShadow: `0 0 50px 60px ${theme.palette.background.default} inset`,\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            boxShadow: `0 0 50px 70px ${theme.palette.background.default} inset`,\r\n        },\r\n    },\r\n    ProfileImg: {\r\n        objectFit:'cover',\r\n        objectPosition: \"0 0px\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n    },\r\n}));\r\n\r\nexport default ProfilePicture3D;\r\n","import React from 'react';\r\n\r\nimport ArchangelMichaelStatue3D from \"./ArchangelMichaelStatue3D\";\r\nimport ArchangelMichael from \"../../assets/models/Archangel Michael Statue.obj\";\r\n\r\nimport AppleVisionPro3D from './AppleVisionPro3D';\r\nimport AppleVisionPro from \"../../assets/models/Apple Vision Pro.glb\";\r\n\r\nimport REDCamera3D from \"./REDCamera3D\";\r\nimport REDCamera from \"../../assets/models/RED Camera.glb\";\r\n\r\nimport LightBulb3D from \"./LightBulb3D\";\r\nimport LightBulb from \"../../assets/models/LightBulb.glb\";\r\n\r\nimport ProfilePicture3D from './ProfilePicture3D';\r\n\r\nexport const AssetType = Object.freeze({\r\n    Home: 1,\r\n    Immersive: 2,\r\n    Film: 3,\r\n    Design: 4\r\n});\r\n\r\nconst Asset3D = ({ type, position, rotation, scale, scrollRotationFactor, material }) => {\r\n\r\n    return (\r\n        <>\r\n            {type === AssetType.Home && <ArchangelMichaelStatue3D path={ArchangelMichael} material={material} position={position} rotation={rotation} scale={scale} scrollRotationFactor={scrollRotationFactor} />}\r\n            {type === AssetType.Immersive && <AppleVisionPro3D path={AppleVisionPro} position={position} rotation={rotation} scale={scale} scrollRotationFactor={scrollRotationFactor} />}\r\n            {type === AssetType.Film && <REDCamera3D path={REDCamera} position={position} rotation={rotation} scale={scale} scrollRotationFactor={scrollRotationFactor} />}\r\n            {type === AssetType.Design && <LightBulb3D path={LightBulb} position={position} rotation={rotation} scale={scale} />}\r\n            {type === AssetType.Profile && <ProfilePicture3D />}\r\n        </>\r\n    )\r\n};\r\n\r\nconst MemoizedAsset3D = React.memo(Asset3D);\r\n\r\nexport { MemoizedAsset3D as Asset3D };"],"names":["swapImageSource","targetID","newSource","document","getElementById","src","useStyles","makeStyles","theme","cardRoot","zIndex","cardRootDark","textDecoration","transition","backgroundColor","palette","background","default","color","text","primary","border","main","cardRootLight","hexToRgba","cardInViewDark","cardInViewLight","card33","flex","maxWidth","breakpoints","down","card66","card100","cardInfoContainer","textAlign","marginLeft","marginRight","width","fontSize","margin","padding","cardImgContainer","display","marginBottom","overflow","objectFit","cardImg","height","card1x1","aspectRatio","card2x1","card3x1","_ref2","id","page","title","date","frontImage","frontAnimation","frontImageAlt","cardCoverage","ref","useRef","classes","useTheme","hex","opacity","bigint","parseInt","slice","isDarkMode","useContext","ThemeContext","isTouchscreen","useMediaQuery","isInViewport","useIsInViewport","isIntersecting","setIsIntersecting","useState","useEffect","observer","IntersectionObserver","_ref","entry","threshold","current","observe","unobserve","_jsxs","href","className","onMouseEnter","onMouseLeave","children","_jsx","alt","immersiveProjectList","Img_1x1","Img_9x16","Img_2x1","Img_3x1","filmProjectList","Img_16x9","Img_cinema_standard","designProjectList","mainContainer","flexWrap","justifyContent","loadBtn","type","t","useTranslation","isMobile","loadedProjects","setLoadedProjects","pageNo","setPageNo","pageSize","setPageSize","loadProjects","startIndex","endIndex","newProjects","filter","value","index","prevProjects","prevPageNo","_Fragment","Grid","container","map","item","k","Card","initial","y","animate","length","Box","mt","Button","onClick","variant","lerp","start","end","Math","abs","calculateScrollOffset","canvasOffset","windowHeightCorrectionFactor","arguments","undefined","windowHeight","window","innerHeight","scrollY","normalize","min_value","max_value","console","warn","root","props","fullWidth","rest","paddingTop","paddingBottom","values","xl","titleContainer","spacing","alignItems","textTransform","whiteSpace","childrenContainer","minHeight","full","reverse","titleControls","useAnimation","contentControls","titleRef","titleInView","useInView","contentRef","contentInView","isTablet","between","Container","component","motion","div","delay","stiffness","damping","variants","visible","x","hidden","Divider","Typography","when","Model3D","forwardRef","path","material","position","rotation","scale","canRotate","isLoading","loaderContext","isGLB","toLowerCase","endsWith","loadedData","useLoader","GLTFLoader","OBJLoader","obj","scene","isDragging","setIsDragging","lastX","setLastX","traverse","child","isMesh","castShadow","receiveShadow","handlePointerUp","useFrame","object","onPointerDown","e","stopPropagation","clientX","onPointerUp","onPointerOut","onPointerMove","deltaX","React","scrollRotationFactor","modelRef","scrollOffset","lerpSmoothFactor","gl","useThree","canvasRef","domElement","style","offsetTop","limitedScrollOffset","xPositionValue","yPositionValue","yRotationValue","scaleValue","initialYRotation","PI","smoothedScaleValue","set","Suspense","fallback","url","scrollOffsetMultiplier","envMapRef","pmremGenerator","PMREMGenerator","compileEquirectangularShader","RGBELoader","setDataType","FloatType","load","texture","envMap","fromEquirectangular","environment","dispose","getBoundingClientRect","top","fadeFactor","max","min","Array","isArray","forEach","mat","isMeshStandardMaterial","isMeshPhysicalMaterial","envMapIntensity","needsUpdate","smoothFactor","pow","opacityFadeOutLowLimitOffset","opacityFadeOutHighLimitOffset","ReflectionHDR","lightsHDR","pointLightRef","spotLightRef","target","add","intensity","camera","lensFlareColor","useMemo","Color","lensFlarePos","Vector3","turnedOnRef","effectsEnabled","setEffectsEnabled","layers","enable","shouldTurnOn","disable","opacityZeroLowLimitOffset","opacityZeroHighLimitOffset","opacityFadeInHighLimitOffset","studioHDR","EffectComposer","multisampling","LensFlare","colorGain","glareSize","starPoints","animated","followMouse","anamorphic","flareSpeed","flareShape","flareSize","secondaryGhosts","starBurst","haloScale","canvasWrapper","canvasOverlay","left","pointerEvents","boxShadow","borderRadius","ProfileImg","objectPosition","ProfilePicture3D","canvasWrapperRef","showUIDelayed","setShowUIDelayed","triggerShowUI","setTriggerShowUI","triggerDisableUI","setTriggerDisableUI","timerRef","settings","fov","zoom","ui","loadDelay","defaultDuration","imageDark","OrbitControlsUIDark","imageLight","OrbitControlsUILight","spherePos","sphereRot","sphereRad","splat","FilipeGS","light","ambient","point","spotPos","spotAngle","spotPenumbra","timeout","setTimeout","clearTimeout","handleMouseEnter","handleMousePointerDown","removeEventListener","addEventListener","AssetType","Object","freeze","Home","Immersive","Film","Design","Asset3D","ArchangelMichaelStatue3D","ArchangelMichael","AppleVisionPro3D","AppleVisionPro","REDCamera3D","REDCamera","LightBulb3D","LightBulb","Profile","MemoizedAsset3D"],"sourceRoot":""}